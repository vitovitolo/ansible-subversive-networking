---
- name: Create the data directory
  file:
    path: "{{ node_exporter_dir }}"
    state: directory

- name: Check the node_exporter version currently installed
  shell: '{{ node_exporter_dir }}/node_exporter --version 2>&1 | head -1 | grep -o {{ node_exporter_version }}'
  changed_when: false
  check_mode: no
  ignore_errors: yes
  register: node_exporter_installed_version

- block:
  - name: Create a temporary directory to unpack the node_exporter tarball
    file:
      path: "/tmp/node_exporter_{{ node_exporter_version }}"
      state: directory

  - name: Download the node_exporter binary
    get_url:
      url: "{{ node_exporter_tarball_url }}"
      dest: /tmp/
    register: node_exporter_download

  - name: Untar the node_exporter tarball
    unarchive:
      src: "{{ node_exporter_download.dest }}"
      dest: "/tmp/node_exporter_{{ node_exporter_version }}"
      copy: no

  - name: Replace the node_exporter binary
    copy:
      src: "/tmp/node_exporter_{{ node_exporter_version }}/node_exporter"
      dest: "{{ node_exporter_dir }}/node_exporter"
      remote_src: yes
      mode: 0755
    notify: restart node_exporter

  - name: Clean up the node_exporter install files
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - "/tmp/node_exporter_{{ node_exporter_version }}"
      - "{{ node_exporter_download.dest }}"

  when:
    - node_exporter_installed_version.rc != 0
    - not ansible_check_mode
